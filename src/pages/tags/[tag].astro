---
import Layout from '../../layouts/Layout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Video from '../../components/Video.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection('posts');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));
  const allTags = new Set();
  sortedPosts.map(post => {
      post.data.tags && post.data.tags.map(tag => allTags.add(tag))
  })

  return Array.from(allTags).map((tag) => {
    const filteredPosts = sortedPosts.filter((post) => post.data.tags.includes(tag))
    return {
      params: { tag },
      props: {
        posts: filteredPosts
      }
    };
  });
}

const { posts } = Astro.props;
const { tag } = Astro.params;

---

<Layout title={tag + " tag page"}>
	<h1>{tag}</h1>
	    {posts.map((post) => (
	      <div class="post">
          {post.data.videoId ? <Video title={post.data.title}, videoId={post.data.videoId} /> : ""}
	      	<Fragment set:html={post.rendered.html}/>
	      <a href=`/posts/${post.id}/`><FormattedDate date={post.data.pubDate} /></a>
	      <div class="tags">{(post.data.tags ? post.data.tags.flatMap((tag: string) => <span class="tag"><a href=`/tags/${tag}/`>#{tag}</a></span>) : "")}</div>
	      </div>
	    ))}
	</Layout>